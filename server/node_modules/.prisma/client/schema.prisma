// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "sqlserver"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id            String @id @default(uuid())
  username      String @unique
  first_name    String?
  last_name     String?
  email         String @unique
  created_at    DateTime
  password      String
  priv_level    Int?

  tokens        AccountToken[]

  profile       Profile @relation(fields: [username], references: [username])

  @@map("accounts")
}

model Profile {
  username            String @id @unique
  first_name          String
  last_name           String
  email               String
  greeting            String
  color               String?
  description         String
  profile_picture     String?
  profile_cover       String?
  profile_animation   String?
  id                  String @default(uuid())

  account             Account?

  sections            Sections[]

  @@map("profiles")
}

model Sections{
  id              String @id @default(uuid())  
  username        String
  title           String

  profile         Profile @relation(fields: [username], references: [username])

  components      SectionsComponents[]

  @@map("sections")
}

model SectionsComponents {
  id          String @id @default(uuid())
  section_id  String
  type        String
  title       String
  value       Int?
  description String

  section     Sections @relation(fields: [section_id], references: [id])

  items       ComponentItems[]

  @@map("section_components")
}

model ComponentItems {
  id                String @id @default(uuid())
  component_id      String
  type              String
  title             String
  value             Int?
  description       String
  icon              String?
  path              String?

  component SectionsComponents @relation(fields: [component_id], references: [id])

  @@map("component_items")
}

model AccountToken {
  id              String @id @default(uuid())
  refresh_token   String
  account_id      String
  expires_date    DateTime
  created_at      DateTime

  account_token  Account @relation(fields: [account_id], references: [id])

  @@map("account_tokens")
}